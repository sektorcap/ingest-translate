buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "org.elasticsearch.gradle:build-tools:${elasticsearchVersion}"
  }
}

plugins {
  id "co.riiid.gradle" version "0.4.2"
}

group = 'org.elasticsearch.plugin.ingest'
version = "${elasticsearchVersion}"

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'elasticsearch.esplugin'
apply plugin: 'elasticsearch.testclusters'


// license of this project
licenseFile = rootProject.file('LICENSE.txt')
// copyright notices
noticeFile = rootProject.file('NOTICE.txt')

esplugin {
  name 'ingest-translate'
  description 'Replaces field contents based on replacement values specified in a file'
  classname 'org.elasticsearch.plugin.ingest.translate.IngestTranslatePlugin'
  // license of the plugin, may be different than the above license
  licenseFile rootProject.file('LICENSE.txt')
  // copyright notices, may be different than the above notice
  noticeFile rootProject.file('NOTICE.txt')
}

dependencies {
  compile "com.fasterxml.jackson.core:jackson-databind:2.8.10"
  compile "com.fasterxml.jackson.core:jackson-annotations:2.8.10"
  compile "com.cronutils:cron-utils:7.0.1"
  compile "commons-net:commons-net:3.6"}

task copyTestFiles(type: Copy) {
  from "${projectDir}/src/test/data/"
  into "${project.buildDir}/ingest-translate"
  include "*.yml"
}

project.bundlePlugin.dependsOn(copyTestFiles)

bundlePlugin {
 from("${project.buildDir}/ingest-translate") {
   into 'config/'
 }
}

githubRelease.doFirst {
  if (!System.getProperty('GITHUB_TOKEN', '')) {
    throw new Exception('Missing property GITHUB_TOKEN')
  }

  // check if zip file is there
  assert file("build/distributions/ingest-translate-${elasticsearchVersion}.zip").exists()

  // configuration
  github {
    owner = 'sektorcap'
    repo = 'ingest-translate'
    token = System.getProperty('GITHUB_TOKEN')
    tagName = "${elasticsearchVersion}"
    targetCommitish = "to_6.8.12"
    assets = [ "build/distributions/ingest-translate-${elasticsearchVersion}.zip" ]
  }
}



compileJava.options.compilerArgs << "-Xlint:-unchecked,-rawtypes"
compileTestJava.options.compilerArgs << "-Xlint:-unchecked,-rawtypes"

// Set to false to not use elasticsearch checkstyle rules
checkstyleMain.enabled = true
checkstyleTest.enabled = true

// FIXME dependency license check needs to be enabled
dependencyLicenses.enabled = false

// FIXME thirdparty audit needs to be enabled
thirdPartyAudit.enabled = false

// Uncomment this to skip license header checks
licenseHeaders.enabled = false
